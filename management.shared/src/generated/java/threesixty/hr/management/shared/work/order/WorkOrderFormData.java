package threesixty.hr.management.shared.work.order;

import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "threesixty.hr.management.client.work.order.WorkOrderForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class WorkOrderFormData extends AbstractFormData {
	private static final long serialVersionUID = 1L;

	public ActualEnd getActualEnd() {
		return getFieldByClass(ActualEnd.class);
	}

	public ActualStart getActualStart() {
		return getFieldByClass(ActualStart.class);
	}

	public Capitalize getCapitalize() {
		return getFieldByClass(Capitalize.class);
	}

	public Description getDescription() {
		return getFieldByClass(Description.class);
	}

	public EpicDescription getEpicDescription() {
		return getFieldByClass(EpicDescription.class);
	}

	public EpicOwner getEpicOwner() {
		return getFieldByClass(EpicOwner.class);
	}

	public Estimate getEstimate() {
		return getFieldByClass(Estimate.class);
	}

	public FunnelEntry getFunnelEntry() {
		return getFieldByClass(FunnelEntry.class);
	}

	/**
	 * access method for property Id.
	 */
	public Long getId() {
		return getIdProperty().getValue();
	}

	/**
	 * access method for property Id.
	 */
	public void setId(Long id) {
		getIdProperty().setValue(id);
	}

	public IdProperty getIdProperty() {
		return getPropertyByClass(IdProperty.class);
	}

	public KeyStakeholder getKeyStakeholder() {
		return getFieldByClass(KeyStakeholder.class);
	}

	public Name getName() {
		return getFieldByClass(Name.class);
	}

	public Roles getRoles() {
		return getFieldByClass(Roles.class);
	}

	public ScheduledEnd getScheduledEnd() {
		return getFieldByClass(ScheduledEnd.class);
	}

	public ScheduledStart getScheduledStart() {
		return getFieldByClass(ScheduledStart.class);
	}

	public Spacer01 getSpacer01() {
		return getFieldByClass(Spacer01.class);
	}

	public WorkOrderType getWorkOrderType() {
		return getFieldByClass(WorkOrderType.class);
	}

	public static class ActualEnd extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class ActualStart extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class Capitalize extends AbstractValueFieldData<Boolean> {
		private static final long serialVersionUID = 1L;
	}

	public static class Description extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class EpicDescription extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class EpicOwner extends AbstractValueFieldData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class Estimate extends AbstractValueFieldData<Boolean> {
		private static final long serialVersionUID = 1L;
	}

	public static class FunnelEntry extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class IdProperty extends AbstractPropertyData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class KeyStakeholder extends AbstractValueFieldData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class Name extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Roles extends AbstractTableFieldBeanData {
		private static final long serialVersionUID = 1L;

		@Override
		public RolesRowData addRow() {
			return (RolesRowData) super.addRow();
		}

		@Override
		public RolesRowData addRow(int rowState) {
			return (RolesRowData) super.addRow(rowState);
		}

		@Override
		public RolesRowData createRow() {
			return new RolesRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return RolesRowData.class;
		}

		@Override
		public RolesRowData[] getRows() {
			return (RolesRowData[]) super.getRows();
		}

		@Override
		public RolesRowData rowAt(int index) {
			return (RolesRowData) super.rowAt(index);
		}

		public void setRows(RolesRowData[] rows) {
			super.setRows(rows);
		}

		public static class RolesRowData extends AbstractTableRowData {
			private static final long serialVersionUID = 1L;
			public static final String assignedToName = "assignedToName";
			public static final String role = "role";
			public static final String effectiveFrom = "effectiveFrom";
			public static final String effectiveTo = "effectiveTo";
			public static final String assignedToId = "assignedToId";
			private String m_assignedToName;
			private String m_role;
			private Date m_effectiveFrom;
			private Date m_effectiveTo;
			private Long m_assignedToId;

			public String getAssignedToName() {
				return m_assignedToName;
			}

			public void setAssignedToName(String newAssignedToName) {
				m_assignedToName = newAssignedToName;
			}

			public String getRole() {
				return m_role;
			}

			public void setRole(String newRole) {
				m_role = newRole;
			}

			public Date getEffectiveFrom() {
				return m_effectiveFrom;
			}

			public void setEffectiveFrom(Date newEffectiveFrom) {
				m_effectiveFrom = newEffectiveFrom;
			}

			public Date getEffectiveTo() {
				return m_effectiveTo;
			}

			public void setEffectiveTo(Date newEffectiveTo) {
				m_effectiveTo = newEffectiveTo;
			}

			public Long getAssignedToId() {
				return m_assignedToId;
			}

			public void setAssignedToId(Long newAssignedToId) {
				m_assignedToId = newAssignedToId;
			}
		}
	}

	public static class ScheduledEnd extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class ScheduledStart extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class Spacer01 extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class WorkOrderType extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}
}
